[buildout]
parts =  
    instance
    zopepy
    i18ndude
    zopeskel
    test
    omelette
    repozo

extends = 
    http://dist.plone.org/release/4.2.1/versions.cfg

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.2.1
    http://dist.plone.org/thirdparty

extensions = 
    mr.developer
    buildout.dumppickedversions

sources = sources

versions = versions

# Reference any folders where you have Python egg source code under development here 
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a 
# repository mr.developer will handle this automatically for you
develop =
    src/mformulae.core
    src/mformulae.theme
    src/collective.formwidget.mathjax

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8074
effective-user = plone
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage

environment-vars =
    zope_i18n_compile_mo_files true

eggs =
    PIL
    Plone
    plone.app.dexterity
    plone.app.multilingual
    plone.multilingualbehavior
    collective.polls
    collective.googleanalytics
    z3c.jbot
    plone.reload
    mformulae.core
    mformulae.theme
    collective.flowplayer
    collective.contentleadimage
    collective.dexteritytextindexer
    eea.facetednavigation
    Products.DocFinderTab
    collective.portlet.debuginfo
    collective.formwidget.mathjax


# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =
    collective.formwidget.mathjax

# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# create ZopeSkel and paster commands with dexterity support
[zopeskel]
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    PasteScript
    zopeskel.dexterity

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on the format of
# this part
[sources]
#collective.developermanual = git git://github.com/collective/collective.developermanual.git

# Version pindowns for new style products go here - this section extends one 
# provided in http://dist.plone.org/release/
[versions]
plone.app.jquery = 1.7.2
plone.app.jquerytools = 1.5
ZopeSkel = 2.21.2
